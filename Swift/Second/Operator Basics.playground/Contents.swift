import Cocoa

/*
a + b
a와 b사이 +를 연산자 Operator라고 하며 a 와 b를 피연산자 Operand 라고 함

+a
피 연산자가 하나일때는 단항연산자(Unary Operator)
단항 연산자를 사용할 시 에는 꼭 +a 처럼 공백없이 사용

a + b
피 연산자가 두개일때는 이항연산자(Binary Operator)
이항 연산자는 공백의 유뮤는 관계없이 사용가능 하나 코드에 따라 공백이 있을경우 오류 발생 가능성이 높음

a ? b : c
피 연산자가 세개일때는 삼항연산자 또는 조건연산자(Teranry Operator)
삼항 연산자도 이항 연산자와 마찬가지로 앞뒤로 공백을 추가주어야 사용이 가능

+a, a+, a + b
연산자가 피 연산자 앞에 있을때는 전치연산자(Prefix Operator), 뒤에 있을때는 후치연산자(Postfix Operator), 사이에 있을때는 Infix Operator
 
a + b * c
프로그래밍에서는 연산순서가 있는 괄호() 를 이용할 경우 우선적으로 연산이 되며, 중첩 되어 있을 경우 가장 안쪽에 있는 괄호부터 연산이 된다.

3 - 2 - 1
위와 같이 연산순서에 따라 값이 달라지는 경우에 순서가 정해져 있는데 이를 결합규칙() Associativity이라고 하며 왼쪽에서 오른쪽으로 계산할때는 좌결합성(Left Associative)
오른쪽에서 왼쪽일 경우 우결합성(Right Associative) 이라고 한다.
다만 마찬가지로 괄호()를 이용할 경우 결합규칙과 관계없이 우선 연산이 된다.
*/
