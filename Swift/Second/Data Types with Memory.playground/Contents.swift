import Cocoa

/*
Data Types = 자료형

Int 자료형은 32비트에서 4바이트 64비트에서 8바이트의 크기를 가짐
약 -900경부터 900경까지 저장 가능

- Swift의 자료형은 다섯가지로 구분

 1. Integer Types = 정수
 2. Floating-point Types = 실수
 3. Boolean Types = 참, 거짓
 4. Character Types = 하나의 문자
 5. String Types = 하나 이상의 문자

위와 같이 내장되어있는 자료형을 내장 자료형이라고 하며 구조체와 클래스를 통해 만드는 자료형을 사용자 정의 자료형이라고 함

Built-in Daya Type = 내장 자료형
Custom Data Type = 사용자 정의 자료형

- 메모리
 
1, 0을 저장할수 있는 공간을 가진 반도체
전압 차이를 이용해 데이터를 저장
가장 작은 저장단위 Bit(비트), 가장 큰 단위 YB(요타바이트)

- Bit
 
0, 1을 저장하는 가장 작은공간
컴퓨터 공학에서 정보의 기본 단위
Bit가 8개가 모이면 Byte = 10100110(exam)
Bit에는 0, 1을 저장할 수 있지만 다른 숫자는 저장 X
1Byte는 8Bit = 00000000, 10001010, 11010011, 11111111 이런식으로 모든 경우의 수를 헤아렸을때 256개의 경우가 가능
저장할수 있는 범위는 양수일때 0~255
양수와 음수를 모두 저장한다면 -128~127
22를 2진수로 변환시 00010110
위 숫자 중 가장 앞에 있는 비트 0을 최상위 비트 "MSB(Most Significant Bit)", 가장 뒷쪽에 있는 비트 0을 최하위 비트 "LSB(Least Significant Bit)"
여덟 자리 비트 전체를 "Data Bit"
음수, 0, 양수를 모두 저장할수 있다면 앞에 부호를 붙일수 있다는 의미에서 Signed 자료형
음수를 저장할 수 없고 0, 양수만을 저장할 수 있다면 Unsigned 자료형
음수를 메모리에 저장시에 22 -> 00010110 -> Bitwise NOT 연산(0을 1로, 1을 0으로) -> 11101001 -> 최하위 비트 전 비트에 1을 더함 -> -22는 메모리에 저장하였을때 11101010
양수를 저장할 수 있는 범위를 넘어 만약 256을 저장하게 되면 다른값이 저장되며 이러한 문제를 Overflow라고 하며 Objective-C와 c계열 언어에서는 허용하지만 Swift에서는 에러로 판단
Overflow는 특정 문제를 해결하기 위한 테크닉으로도 사용하는데 Swift에서 이를 사용하려면 Overflow 연산자를 사용해야함
*/
